<?php

declare(strict_types=1);

namespace App\MoonShine\Resources;

use App\Models\Profile\Human\Religion;
use App\Services\Attributes\ReligionService;
use Illuminate\Database\Eloquent\Model;
use MoonShine\Enums\PageType;
use MoonShine\Fields\Field;
use MoonShine\Fields\Fields;
use MoonShine\Fields\Text;
use MoonShine\Resources\ModelResource;
use MoonShine\Decorations\Block;
use MoonShine\Fields\ID;

class ReligionsResource extends ModelResource
{
    protected string $model = Religion::class;

    protected string $title = 'Религиозные взгляды';

    protected ?PageType $redirectAfterSave = PageType::INDEX;

    private ReligionService $religionService;

    public function __construct()
    {
        $this->religionService = app(ReligionService::class);
    }

    protected bool $createInModal = true;

    public function getActiveActions(): array
    {
        return ['create','view', 'delete'];

    }

    public function fields(): array
    {
        return [
            Block::make([
                ID::make()->sortable(),
                Text::make('Название','title'),
            ]),
        ];
    }

    public function save(Model $item, ?Fields $fields = null): Model
    {
        $fields ??= $this->getFormFields()->onlyFields();

        $fields->fill($item->toArray(), $item);

        $fields->each(fn (Field $field): mixed => $field->beforeApply($item));
        if (! $item->exists) {
            $item = $this->beforeCreating($item);
        }
        if ($item->exists) {
            $item = $this->beforeUpdating($item);
        }
        $fields->withoutOutside()
            ->each(fn (Field $field): mixed => $field->apply($this->onSave($field), $item));

        $religion = $this->religionService->create($item['title']);


        return $religion; // TODO: Change the autogenerated stub
    }

    public function rules(Model $item): array
    {
        return [];
    }
}
